function! PackInit() abort
    packadd minpac

    call minpac#init()
    call minpac#add('k-takata/minpac', {'type': 'opt'})

    " Additional plugins here.
    call minpac#add('vim-jp/syntax-vim-ex')
    call minpac#add('tyru/open-browser.vim')
    call minpac#add('Yggdroot/indentLine')
    call minpac#add('preservim/nerdtree')
    call minpac#add('altercation/vim-colors-solarized')
    " call minpac#add('zxqfl/tabnine-vim')
    
endfunction

" Define user commands for updating/cleaning the plugins.
" Each of them calls PackInit() to load minpac and register
" the information of plugins, then performs the task.
command! PackUpdate call PackInit() | call minpac#update('', {'do': 'call minpac#status()'})
command! PackClean  call PackInit() | call minpac#clean()
command! PackStatus call PackInit() | call minpac#status()

function! PackList(...)
    call PackInit()
    return join(sort(keys(minpac#getpluglist())), "\n")
endfunction

command! -nargs=1 -complete=custom,PackList
            \ PackOpenDir call PackInit() | call term_start(&shell,
            \ {'cwd': minpac#getpluginfo(<q-args>).dir,
            \ 'term_finish': 'close'})

command! -nargs=1 -complete=custom,PackList
            \ PackOpenUrl call PackInit() | call openbrowser#open(
            \ minpac#getpluginfo(<q-args>).url)

set packpath^=~/.vim
call PackInit()
packloadall

" Plugin Settings
set termguicolors               " enable true colors support
set nocompatible
syntax on
set background=dark
colorscheme solarized

autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'cd '.argv()[0] | endif

autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

map <C-n> :NERDTreeToggle<CR>

let g:indentLine_char_list = ['|', '¦', '┆', '┊']

" General
set number                      " Show line numbers
set showmatch                   " Highlight matching brace
set visualbell                  " Use visual bell (no beeping)
set mouse=a                     " Add mouse support
set nocompatible                " Remove compatibility with old vi
set hlsearch                    " Highlight all search results
set smartcase                   " Enable smart-case search
set ignorecase                  " Always case-insensitive
set incsearch                   " Searches for strings incrementally
 
set autoindent                  " Auto-indent new lines
set expandtab                   " Use spaces instead of tabs
set shiftwidth=4                " Number of auto-indent spaces
set smartindent                 " Enable smart-indent
set smarttab                    " Enable smart-tabs
set softtabstop=4               " Number of spaces per Tab
 
" Advanced
set ruler                       " Show row and column ruler information
 
set autochdir                   " Change working directory to open buffer
" set autowriteall                " Auto-write all file changes
 
set undolevels=1000	            " Number of undo levels
set backspace=indent,eol,start  " Backspace behaviour


filetype indent on
filetype plugin on




" Generated by VimConfig.com
